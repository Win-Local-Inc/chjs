name: run-tests

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}

        # MySQL service setup
        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: password
                    MYSQL_DATABASE: testing
                    MYSQL_USER: user
                    MYSQL_PASSWORD: password
                    MYSQL_LOG_BIN_TRUST_FUNCTION_CREATORS: "1"
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3
                    -v ${{ github.workspace }}/my.cnf:/etc/mysql/my.cnf

        # Environment variables for tests
        env:
            DB_CONNECTION: mysql
            DB_HOST: 127.0.0.1
            DB_PORT: 3306
            DB_DATABASE: testing
            DB_USERNAME: user
            DB_PASSWORD: password

        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest]
                php: [8.2]
                laravel: [10.*]
                stability: [prefer-stable]
                include:
                    - laravel: 10.*
                      testbench: ^8.0

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
                  coverage: none

            - name: Setup problem matchers
              run: |
                  echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                  echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Install dependencies
              run: |
                  composer install
                  #composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                  #composer update --${{ matrix.stability }} --prefer-dist --no-interaction

            - name: Check MySQL Configuration
              run: |
                  echo "SHOW VARIABLES LIKE 'log_bin_trust_function_creators';" | mysql -h127.0.0.1 -P3306 -uuser -ppassword

            - name: Grant SUPER Privilege
              run: |
                  echo "GRANT SUPER ON *.* TO 'user'@'%' IDENTIFIED BY 'password';" | mysql -h127.0.0.1 -P3306 -uroot -ppassword


            - name: Execute tests
              run: vendor/bin/testbench package:test --configuration=tests/phpunit.xml
